@use "../utilities/mixins" as mixins;
@use "../utilities/colors" as colors;

.burger-btn {
  position: fixed;
  top: 20px;
  right: 20px;
  display: inline-block;
  padding: 20px;
  background-color: transparent;
  border: 2px solid transparent;
  border-radius: 10px;
  z-index: 100;
  transition-property: opacity;
  transition-duration: 300ms;
  transition-timing-function: linear;
  cursor: pointer;

  &:hover {
    opacity: .7;
  }

  &:focus {
    outline: none;
    border-color: colors.$white;
  }

  &.is-active {
    .burger-btn__inner,
    .burger-btn__inner::before,
    .burger-btn__inner::after {
      background-color: colors.$dark;
    }

    &:hover {
      opacity: .7;
    }
  }

  &__box {
    position: relative;
    display: block;
    width: 40px;
    height: 30px;
  }

  &__inner, &__inner::before, &__inner::after {
    position: absolute;
    right: 0;
    display: block;
    width: 100%;
    height: 3px;
    background-color: colors.$white;
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: ease;
  }

  &__inner::before, &__inner::after {
    content: "";
  }

  &__inner::before {
    top: 13px;
  }

  &__inner::after {
    top: 27px;
  }

  &.animation {
    .burger-btn__box {
      perspective: 80px;
    }

    .burger-btn__inner {
      transition: transform 300ms cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 100ms cubic-bezier(0.645, 0.045, 0.355, 1);
    }

    .burger-btn__inner::before, .burger-btn__inner::after {
      transition: transform 0s 100ms cubic-bezier(0.645, 0.045, 0.355, 1);
      background-color: #fff;
    }

    &.is-active {
      .burger-btn__inner {
        background-color: transparent;

        &::before,
        &::after {
          background-color: colors.$darker;
        }

        &::before {
          transform: rotate(45deg);
        }

        &::after {
          transform: translateY(-13px) rotate(-45deg)
        }
      }
    }
  }
}